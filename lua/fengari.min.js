/**
 * @file fengari.min.js
 * @description Fengari Lua VM (minified), the core interpreter for preset scripting.
 * @version 0.1.4 (or latest compatible version)
 * @license MIT License.
 *
 * This file contains the complete, minified Fengari Lua VM. It provides a full
 * Lua 5.3 environment directly in the browser, enabling the execution of
 * .lua preset files without needing a server-side component or a separate
 * compilation step.
 *
 * Integration in Super-Dribble:
 * - This VM is used by /lua/parser.js to load, execute, and read preset
 * tables from .lua files.
 * - It allows for a clean separation between DSP logic (WASM) and preset
 * definitions (Lua), making presets easily editable and extensible for users.
 * - The interface functions in parser.js (e.g., `parseLuaPresets`) handle the
 * bridge between JavaScript and this Lua environment.
 *
 * For more information on Fengari, visit: https://github.com/fengari-lua/fengari
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.fengari=t():e.fengari=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=53)}([function(e,t,n){"use strict";var r=n(1),o=r.LUA_SIGNATURE,i=r.LUA_VERSION_MAJOR,a=r.LUA_VERSION_MINOR,u=r.LUA_VERSION_RELEASE,s=r.LUA_VERSION_NUM,c=r.LUA_VERSION,l=r.LUA_RELEASE,f=r.LUA_COPYRIGHT,p=r.lua_checkstack,d=r.lua_copy,h=r.lua_dump,v=r.lua_error,g=r.lua_gc,m=r.lua_getallocf,b=r.lua_getfield,y=r.lua_getglobal,_=r.lua_getmetatable,x=r.lua_gettop,C=r.lua_getuservalue,k=r.lua_insert,w=r.lua_isboolean,A=r.lua_iscfunction,S=r.lua_isfunction,E=r.lua_islightuserdata,T=r.lua_isnil,M=r.lua_isnone,P=r.lua_isnoneornil,L=r.lua_isnumber,N=r.lua_isstring,O=r.lua_istable,B=r.lua_isthread,R=r.lua_isuserdata,I=r.lua_newstate,D=r.lua_newtable,F=r.lua_newthread,U=r.lua_newuserdata,q=r.lua_next,V=r.lua_pcall,j=r.lua_pop,z=r.lua_pushboolean,W=r.lua_pushcclosure,K=r.lua_pushcfunction,G=r.lua_pushfstring,H=r.lua_pushinteger,Y=r.lua_pushlightuserdata,J=r.lua_pushliteral,X=r.lua_pushlstring,Q=r.lua_pushnil,Z=r.lua_pushnumber,$=r.lua_pushstring,ee=r.lua_pushthread,te=r.lua_pushvalue,ne=r.lua_pushvfstring,re=r.lua_rawequal,oe=r.lua_rawget,ie=r.lua_rawgeti,ae=r.lua_rawgetp,ue=r.lua_rawlen,se=r.lua_rawset,ce=r.lua_rawseti,le=r.lua_rawsetp,fe=r.lua_remove,pe=r.lua_replace,de=r.lua_resume,he=r.lua_setallocf,ve=r.lua_setfield,ge=r.lua_setglobal,me=r.lua_setmetatable,be=r.lua_settop,ye=r.lua_setuservalue,_e=r.lua_status,xe=r.lua_toboolean,Ce=r.lua_tocfunction,ke=r.lua_tointeger,we=r.lua_tointegerx,Ae=r.lua_tolstring,Se=r.lua_tonumber,Ee=r.lua_tonumberx,Te=r.lua_topointer,Me=r.lua_tostring,Pe=r.lua_tothread,Le=r.lua_touserdata,Ne=r.lua_type,Oe=r.lua_typename,Be=r.lua_upvalueindex,Re=r.lua_xmove,Ie=r.LUA_ERRERR,De=r.LUA_ERRMEM,Fe=r.LUA_ERRRUN,Ue=r.LUA_ERRSYNTAX,qe=r.LUA_GCCOLLECT,Ve=r.LUA_GCCOUNT,je=r.LUA_GCCOUNTB,ze=r.LUA_GCISRUNNING,We=r.LUA_GCRESTART,Ke=r.LUA_GCSETPAUSE,Ge=r.LUA_GCSETSTEPMUL,He=r.LUA_GCSTEP,Ye=r.LUA_GCSTOP,Je=r.LUA_HOOKCALL,Xe=r.LUA_HOOKCOUNT,Qe=r.LUA_HOOKLINE,Ze=r.LUA_HOOKRET,e=r.LUA_HOOKTAILCALL,t=r.LUA_MASKCALL,n=r.LUA_MASKCOUNT,o=r.LUA_MASKLINE,i=r.LUA_MASKRET,a=r.LUA_MINSTACK,u=r.LUA_MULTRET,s=r.LUA_NOREF,c=r.LUA_OK,l=r.LUA_REFNIL,f=r.LUA_REGISTRYINDEX,p=r.LUA_RIDX_GLOBALS,d=r.LUA_RIDX_MAINTHREAD,h=r.LUA_TBOOLEAN,v=r.LUA_TFUNCTION,g=r.LUA_TLIGHTUSERDATA,m=r.LUA_TNIL,b=r.LUA_TNONE,y=r.LUA_TNUMBER,;/*... etc ...*/
